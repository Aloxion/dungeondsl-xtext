/*
 * generated by Xtext 2.37.0
 */
grammar InternalDungeonDSL;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.DungeonDSLGrammarAccess;

}

@parser::members {

 	private DungeonDSLGrammarAccess grammarAccess;

    public InternalDungeonDSLParser(TokenStream input, DungeonDSLGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Dungeon";
   	}

   	@Override
   	protected DungeonDSLGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleDungeon
entryRuleDungeon returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDungeonRule()); }
	iv_ruleDungeon=ruleDungeon
	{ $current=$iv_ruleDungeon.current; }
	EOF;

// Rule Dungeon
ruleDungeon returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Dungeon'
		{
			newLeafNode(otherlv_0, grammarAccess.getDungeonAccess().getDungeonKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getDungeonAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDungeonRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDungeonAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='theme'
		{
			newLeafNode(otherlv_3, grammarAccess.getDungeonAccess().getThemeKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getDungeonAccess().getEqualsSignKeyword_4());
		}
		(
			(
				lv_theme_5_0=RULE_STRING
				{
					newLeafNode(lv_theme_5_0, grammarAccess.getDungeonAccess().getThemeSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDungeonRule());
					}
					setWithLastConsumed(
						$current,
						"theme",
						lv_theme_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6='lvl'
		{
			newLeafNode(otherlv_6, grammarAccess.getDungeonAccess().getLvlKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getDungeonAccess().getEqualsSignKeyword_7());
		}
		(
			(
				lv_lvl_8_0=RULE_INT
				{
					newLeafNode(lv_lvl_8_0, grammarAccess.getDungeonAccess().getLvlINTTerminalRuleCall_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDungeonRule());
					}
					setWithLastConsumed(
						$current,
						"lvl",
						lv_lvl_8_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDungeonAccess().getFloorsFloorParserRuleCall_9_0());
				}
				lv_floors_9_0=ruleFloor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDungeonRule());
					}
					add(
						$current,
						"floors",
						lv_floors_9_0,
						"org.xtext.DungeonDSL.Floor");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getDungeonAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

// Entry rule entryRuleFloor
entryRuleFloor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFloorRule()); }
	iv_ruleFloor=ruleFloor
	{ $current=$iv_ruleFloor.current; }
	EOF;

// Rule Floor
ruleFloor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Floor'
		{
			newLeafNode(otherlv_0, grammarAccess.getFloorAccess().getFloorKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFloorAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFloorRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFloorAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFloorAccess().getRoomsRoomParserRuleCall_3_0());
				}
				lv_rooms_3_0=ruleRoom
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFloorRule());
					}
					add(
						$current,
						"rooms",
						lv_rooms_3_0,
						"org.xtext.DungeonDSL.Room");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getFloorAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleRoom
entryRuleRoom returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRoomRule()); }
	iv_ruleRoom=ruleRoom
	{ $current=$iv_ruleRoom.current; }
	EOF;

// Rule Room
ruleRoom returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Room'
		{
			newLeafNode(otherlv_0, grammarAccess.getRoomAccess().getRoomKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getRoomAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getRoomAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='size'
		{
			newLeafNode(otherlv_3, grammarAccess.getRoomAccess().getSizeKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getRoomAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getSizeSizesEnumRuleCall_5_0());
				}
				lv_size_5_0=ruleSizes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					set(
						$current,
						"size",
						lv_size_5_0,
						"org.xtext.DungeonDSL.Sizes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='type'
		{
			newLeafNode(otherlv_6, grammarAccess.getRoomAccess().getTypeKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getRoomAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getTypeRoomTypesEnumRuleCall_8_0());
				}
				lv_type_8_0=ruleRoomTypes
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					set(
						$current,
						"type",
						lv_type_8_0,
						"org.xtext.DungeonDSL.RoomTypes");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='floorID'
		{
			newLeafNode(otherlv_9, grammarAccess.getRoomAccess().getFloorIDKeyword_9());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getRoomAccess().getEqualsSignKeyword_10());
		}
		(
			(
				lv_floor_11_0=RULE_ID
				{
					newLeafNode(lv_floor_11_0, grammarAccess.getRoomAccess().getFloorIDTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomRule());
					}
					setWithLastConsumed(
						$current,
						"floor",
						lv_floor_11_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_12='connections'
		{
			newLeafNode(otherlv_12, grammarAccess.getRoomAccess().getConnectionsKeyword_12());
		}
		otherlv_13='='
		{
			newLeafNode(otherlv_13, grammarAccess.getRoomAccess().getEqualsSignKeyword_13());
		}
		otherlv_14='['
		{
			newLeafNode(otherlv_14, grammarAccess.getRoomAccess().getLeftSquareBracketKeyword_14());
		}
		(
			(
				lv_connections_15_0=RULE_ID
				{
					newLeafNode(lv_connections_15_0, grammarAccess.getRoomAccess().getConnectionsIDTerminalRuleCall_15_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRoomRule());
					}
					addWithLastConsumed(
						$current,
						"connections",
						lv_connections_15_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_16=','
			{
				newLeafNode(otherlv_16, grammarAccess.getRoomAccess().getCommaKeyword_16_0());
			}
			(
				(
					lv_connections_17_0=RULE_ID
					{
						newLeafNode(lv_connections_17_0, grammarAccess.getRoomAccess().getConnectionsIDTerminalRuleCall_16_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRoomRule());
						}
						addWithLastConsumed(
							$current,
							"connections",
							lv_connections_17_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)*
		otherlv_18=']'
		{
			newLeafNode(otherlv_18, grammarAccess.getRoomAccess().getRightSquareBracketKeyword_17());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRoomAccess().getTrapsTrapParserRuleCall_18_0());
				}
				lv_traps_19_0=ruleTrap
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRoomRule());
					}
					add(
						$current,
						"traps",
						lv_traps_19_0,
						"org.xtext.DungeonDSL.Trap");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getRoomAccess().getRightCurlyBracketKeyword_19());
		}
	)
;

// Entry rule entryRuleTrap
entryRuleTrap returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrapRule()); }
	iv_ruleTrap=ruleTrap
	{ $current=$iv_ruleTrap.current; }
	EOF;

// Rule Trap
ruleTrap returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Trap'
		{
			newLeafNode(otherlv_0, grammarAccess.getTrapAccess().getTrapKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTrapAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTrapRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getTrapAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='trigger'
		{
			newLeafNode(otherlv_3, grammarAccess.getTrapAccess().getTriggerKeyword_3());
		}
		otherlv_4='='
		{
			newLeafNode(otherlv_4, grammarAccess.getTrapAccess().getEqualsSignKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTrapAccess().getTriggerEventTriggerEnumRuleCall_5_0());
				}
				lv_trigger_5_0=ruleEventTrigger
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrapRule());
					}
					set(
						$current,
						"trigger",
						lv_trigger_5_0,
						"org.xtext.DungeonDSL.EventTrigger");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_6='disarmable'
		{
			newLeafNode(otherlv_6, grammarAccess.getTrapAccess().getDisarmableKeyword_6());
		}
		otherlv_7='='
		{
			newLeafNode(otherlv_7, grammarAccess.getTrapAccess().getEqualsSignKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTrapAccess().getDisarmableBOOLEANEnumRuleCall_8_0());
				}
				lv_disarmable_8_0=ruleBOOLEAN
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrapRule());
					}
					set(
						$current,
						"disarmable",
						lv_disarmable_8_0,
						"org.xtext.DungeonDSL.BOOLEAN");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9='triggerChance'
		{
			newLeafNode(otherlv_9, grammarAccess.getTrapAccess().getTriggerChanceKeyword_9());
		}
		otherlv_10='='
		{
			newLeafNode(otherlv_10, grammarAccess.getTrapAccess().getEqualsSignKeyword_10());
		}
		(
			(
				lv_triggerChance_11_0=RULE_INT
				{
					newLeafNode(lv_triggerChance_11_0, grammarAccess.getTrapAccess().getTriggerChanceINTTerminalRuleCall_11_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTrapRule());
					}
					setWithLastConsumed(
						$current,
						"triggerChance",
						lv_triggerChance_11_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getTrapAccess().getRightCurlyBracketKeyword_12());
		}
	)
;

// Rule BOOLEAN
ruleBOOLEAN returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='true'
			{
				$current = grammarAccess.getBOOLEANAccess().getTrueEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getBOOLEANAccess().getTrueEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='false'
			{
				$current = grammarAccess.getBOOLEANAccess().getFalseEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getBOOLEANAccess().getFalseEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Sizes
ruleSizes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='LARGE'
			{
				$current = grammarAccess.getSizesAccess().getLARGEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getSizesAccess().getLARGEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='MEDIUM'
			{
				$current = grammarAccess.getSizesAccess().getMEDIUMEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getSizesAccess().getMEDIUMEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='SMALL'
			{
				$current = grammarAccess.getSizesAccess().getSMALLEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getSizesAccess().getSMALLEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule RoomTypes
ruleRoomTypes returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='COMBAT'
			{
				$current = grammarAccess.getRoomTypesAccess().getCOMBATEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRoomTypesAccess().getCOMBATEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='TREASURE'
			{
				$current = grammarAccess.getRoomTypesAccess().getTREASUREEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRoomTypesAccess().getTREASUREEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='BOSS'
			{
				$current = grammarAccess.getRoomTypesAccess().getBOSSEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getRoomTypesAccess().getBOSSEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='PUZZLE'
			{
				$current = grammarAccess.getRoomTypesAccess().getPUZZLEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getRoomTypesAccess().getPUZZLEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='SHOP'
			{
				$current = grammarAccess.getRoomTypesAccess().getSHOPEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getRoomTypesAccess().getSHOPEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule EventTrigger
ruleEventTrigger returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='stepOn'
			{
				$current = grammarAccess.getEventTriggerAccess().getStepOnEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getEventTriggerAccess().getStepOnEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='openDoor'
			{
				$current = grammarAccess.getEventTriggerAccess().getOpenDoorEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getEventTriggerAccess().getOpenDoorEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
