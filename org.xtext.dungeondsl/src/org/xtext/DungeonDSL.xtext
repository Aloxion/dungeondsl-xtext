grammar org.xtext.DungeonDSL with org.eclipse.xtext.common.Terminals

generate dungeonDSL "http://www.xtext.org/DungeonDSL"

Dungeon:
    'Dungeon' name=ID '{'
        'theme' '=' theme=STRING
        'lvl' '=' lvl=INT
        (floors+=Floor)*
    '}';

Floor:
    'Floor' name=ID '{'
		(rooms+=Room)*
    '}';

Room:
	'Room' name=ID '{'
		'size' '=' size=Sizes
		'type' '=' type=RoomTypes
		'connections' "=" '[' connections+=ID (',' connections+=ID)* ']'
		(traps+=Trap)*
	'}'
;

Trap:
    'Trap' name=ID '{'
        'trigger' '=' trigger=EventTrigger
        'disarmable' '=' disarmable=BOOLEAN
        'triggerChance' '=' triggerChance=INT
    '}';

NPC:
    'NPC' name=ID '{'
        'behaviour' '=' behaviour=Behaviour
        'type' '=' type=NPCType
        'health' '=' baseHealth=Expression // Now health is an Expression
    '}';
    
Expression returns Expression:
    Addition; // Entry point: lowest precedence

Addition returns Expression:
    Multiplication ({BinaryOperation.left=current} operator=('+'|'-') right=Multiplication)*;
    // Parses Multiplication, then handles '+' or '-' left-associatively using Action

Multiplication returns Expression:
    PrimaryExpression ({BinaryOperation.left=current} operator=('*'|'/') right=PrimaryExpression)*;
    // Parses Primary, then handles '*' or '/' left-associatively using Action

PrimaryExpression returns Expression:
    '(' Expression ')'                // Parentheses for grouping
    | {NumberLiteral} value=INT       // An integer number is the base case
;

enum Behaviour:
	AGGRESSIVE | NEUTRAL
;


enum NPCType:
	MERCHANT | ENEMY | NORMAL
;


enum BOOLEAN:
	true | false
;

enum Sizes:
	LARGE | MEDIUM | SMALL
;

enum RoomTypes:
	COMBAT | TREASURE | BOSS | PUZZLE | SHOP
;

enum EventTrigger:
    stepOn |
    openDoor;